# Title: Enhanced Directory Builder for DevOps Projects
# Description: This Ansible playbook automates the creation of a structured directory for DevOps projects. It maps various categories to tools and creates corresponding subdirectories with placeholder files. It ensures directory structure, file permissions, and ownership according to defined standards.
# Author: Jay-Alexander Elliot
# Date: 2024-01-23
# Usage: Execute this playbook using Ansible. Ensure you have the necessary permissions and Ansible installed. Run the playbook with the command: ansible-playbook [playbook_filename.yml]

---
- name: Enhanced Directory Builder for DevOps Projects
  hosts: localhost
  vars:
    base_dir: "{{ playbook_dir }}"
    log_file: "{{ base_dir }}/directory-builder.log"
    categories_tools_map:
      # Mapping of categories to tools. Expand or modify as needed.
      DevOps: "Kubernetes Docker Ansible HashiCorp-Vault HashiCorp-Terraform ..."
      WebDev: "HTML CSS JavaScript Node.js TypeScript React"
      # ... [Include all other categories here]
    default_file_permissions: '0644'
    default_directory_permissions: '0755'
    default_owner: 'root'
    default_group: 'root'
  
  tasks:
    - name: Validate categories_tools_map structure
      assert:
        that:
          - categories_tools_map is mapping
          - categories_tools_map | length > 0
        fail_msg: "categories_tools_map must be a non-empty dictionary"
      tags: [validation]

    - name: Create directory structure
      vars:
        category: "{{ item.key }}"
        tools: "{{ item.value }}"
      block:
        - name: Create directories for each category and tool
          file:
            path: "{{ base_dir }}/{{ category }}/{{ tool }}"
            state: directory
            mode: "{{ default_directory_permissions }}"
            owner: "{{ default_owner }}"
            group: "{{ default_group }}"
          loop: "{{ tools.split(' ') }}"
          loop_control:
            loop_var: tool
          tags: [directory_creation]

        - name: Add essential placeholder files
          copy:
            content: ""
            dest: "{{ base_dir }}/{{ category }}/{{ tool }}/{{ item }}"
            mode: "{{ default_file_permissions }}"
            owner: "{{ default_owner }}"
            group: "{{ default_group }}"
          loop:
            - "README.md"
            - ".gitignore"
            - "placeholder.txt"
          tags: [file_creation]

      loop: "{{ categories_tools_map | dict2items }}"
      rescue:
        - name: Log failed category processing
          debug:
            msg: "Failed to process category {{ category }}"
          # Add your logging mechanism here, for example, a custom module or local_action
          # local_action: shell echo "Failed to process category {{ category }}" >> {{ log_file }}

      # Allows the playbook to continue executing even if an error occurs
      ignore_errors: yes
      tags: [error_handling]

